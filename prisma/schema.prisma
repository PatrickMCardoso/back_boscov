generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id              Int       @id @default(autoincrement())
  nome            String
  senha           String
  email           String    @unique
  status          Int       @default(1) // 1 = ativo, 0 = inativo
  apelido         String?
  dataNascimento  DateTime  @map("data_nascimento")
  createdAt       DateTime  @default(now()) @map("data_criacao")
  updatedAt       DateTime  @updatedAt @map("data_atualizacao")
  tipoUsuario     String    @default("comum") @map("tipo_usuario")
  avaliacoes      Avaliacao[]
}

model Filme {
  id              Int       @id @default(autoincrement())
  nome            String
  diretor         String
  anoLancamento   Int       @map("ano_lancamento")
  generoId        Int?
  duracao         Int
  produtora       String
  classificacao   String
  poster          String
  status          Int       @default(1) // Adicionado para controle lógico
  mediaAvaliacoes Float?    @default(0)
  avaliacoes      Avaliacao[]
  generos GeneroFilme[] 
}


model Avaliacao {
  idUsuario Int
  idFilme   Int
  nota      Float
  comentario String

  usuario   Usuario @relation(fields: [idUsuario], references: [id])
  filme     Filme   @relation(fields: [idFilme], references: [id])

  @@id([idUsuario, idFilme])
}

model Genero {
  id        Int             @id @default(autoincrement())
  descricao String
  filmes    GeneroFilme[]   // relação N:N
}

model GeneroFilme {
  idGenero Int
  idFilme  Int

  genero Genero @relation(fields: [idGenero], references: [id])
  filme  Filme  @relation(fields: [idFilme], references: [id])

  @@id([idGenero, idFilme])
}

